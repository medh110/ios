name: Build Android APP

on:
  push:
    branches:
      - main
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Delete Assets/Videos folder before Unity build
        run: |
          echo "Removing Assets/Videos directory to prevent import errors"
          rm -rf ./Assets/Videos
          
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        
      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build Android APK
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Build-Android
          path: build/Android
          retention-days: 3
          
  deploy-to-firebase:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-Android
          path: build/Android

      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash

      - name: Deploy to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/Android/*.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }} \
            --groups testers
